{"version":3,"sources":["utils.js","components/LoginPage.js","components/UploadStay.js","components/HostHomePage.js","components/GuestHomePage.js","App.js","reportWebVitals.js","index.js"],"names":["domain","login","credential","asHost","loginUrl","fetch","method","headers","body","JSON","stringify","then","response","status","Error","json","register","registerUrl","getReservations","authToken","localStorage","getItem","listReservationsUrl","Authorization","getStaysByHost","listStaysUrl","searchStays","query","searchStaysUrl","URL","searchParams","append","guest_number","checkin_date","format","checkout_date","deleteStay","stayId","deleteStayUrl","bookStay","data","bookStayUrl","cancelReservation","reservationId","cancelReservationUrl","getReservationsByStay","getReservationByStayUrl","uploadStay","uploadStayUrl","LoginPage","formRef","React","createRef","state","loading","onFinish","console","log","handleLogin","a","formInstance","current","validateFields","setState","getFieldsValue","resp","props","handleLoginSuccess","token","message","error","handleRegister","success","handleCheckboxOnChange","e","target","checked","style","width","margin","ref","this","Item","name","rules","required","disabled","prefix","UserOutlined","className","placeholder","Password","onChange","onClick","shape","type","Component","layout","labelCol","span","wrapperCol","UploadStay","fileInputRef","handleSubmit","values","formData","FormData","files","length","i","address","description","maxWidth","label","TextArea","autoSize","minRows","maxRows","min","accept","multiple","offset","htmlType","Text","Typography","TabPane","Tabs","StayDetailInfoButton","modalVisible","openModal","handleCancel","stay","title","border","size","icon","InfoCircleOutlined","centered","visible","closable","footer","onCancel","direction","strong","RemoveStayButton","handleRemoveStay","onRemoveSuccess","id","danger","ReservationList","reservations","loadData","dataSource","renderItem","item","Meta","guest","username","ViewReservationsButton","modalTitle","destroyOnClose","MyStays","grid","gutter","xs","sm","md","lg","xl","xxl","display","alignItems","ellipsis","actions","extra","dots","arrows","prevArrow","LeftCircleFilled","nextArrow","RightCircleFilled","images","map","image","index","src","url","HostHomePage","defaultActiveKey","destroyInactiveTabPane","tab","BookStayButton","handleBookStay","preserve","SearchStays","search","marginTop","CancelReservationButton","handleCancelReservation","onCancelSuccess","MyReservations","GuestHomePage","Header","Layout","Content","App","authed","setItem","handleLogOut","removeItem","renderContent","userMenu","height","justifyContent","fontSize","fontWeight","color","trigger","overlay","overflow","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.b9d581eb.chunk.js","sourcesContent":["const domain = \"http://onyx-nexus-326722.de.r.appspot.com\";\n\n// body: JSON.stringify(credential) 将登陆信息转换成json格式的string\n\nexport const login = (credential, asHost) => {\n    const loginUrl = `${domain}/authenticate/${asHost ? \"host\" : \"guest\"}`;\n    return fetch(loginUrl, {\n        method: \"POST\",\n        headers: {\n            \"Content-Type\": \"application/json\",\n        },\n        body: JSON.stringify(credential),\n    }).then((response) => {\n        if (response.status !== 200) {\n            throw Error(\"Fail to log in\");\n        }\n\n        return response.json();\n    });\n};\n\nexport const register = (credential, asHost) => {\n    const registerUrl = `${domain}/register/${asHost ? \"host\" : \"guest\"}`;\n    return fetch(registerUrl, {\n        method: \"POST\",\n        headers: {\n            \"Content-Type\": \"application/json\",\n        },\n        body: JSON.stringify(credential),\n    }).then((response) => {\n        if (response.status !== 200) {\n            throw Error(\"Fail to register\");\n        }\n    });\n};\n\nexport const getReservations = () => {\n    //local storage 浏览器提供的object\n    const authToken = localStorage.getItem(\"authToken\");\n    const listReservationsUrl = `${domain}/reservations`;\n\n    return fetch(listReservationsUrl, {\n        headers: {\n            Authorization: `Bearer ${authToken}`,\n        },\n    }).then((response) => {\n        if (response.status !== 200) {\n            throw Error(\"Fail to get reservation list\");\n        }\n\n        return response.json();\n    });\n};\n// authz authorization:进入后是什么角色\n// authn authentication: 登陆\nexport const getStaysByHost = () => {\n    const authToken = localStorage.getItem(\"authToken\");\n    const listStaysUrl = `${domain}/stays/`;\n\n    return fetch(listStaysUrl, {\n        headers: {\n            Authorization: `Bearer ${authToken}`,\n        },\n    }).then((response) => {\n        if (response.status !== 200) {\n            throw Error(\"Fail to get stay list\");\n        }\n\n        return response.json();\n    });\n};\n\nexport const searchStays = (query) => {\n    const authToken = localStorage.getItem(\"authToken\");\n    const searchStaysUrl = new URL(`${domain}/search/`);\n    //统一后端格式\n    //如何往url上安全地增加query string的内容\n    //protocol://domain:port/path?querystring#hashtag\n    searchStaysUrl.searchParams.append(\"guest_number\", query.guest_number);\n    //format <DataPicker />所传的数据\n    searchStaysUrl.searchParams.append(\n        \"checkin_date\",\n        query.checkin_date.format(\"YYYY-MM-DD\")\n    );\n    searchStaysUrl.searchParams.append(\n        \"checkout_date\",\n        query.checkout_date.format(\"YYYY-MM-DD\")\n    );\n    searchStaysUrl.searchParams.append(\"lat\", 37);\n    searchStaysUrl.searchParams.append(\"lon\", -122);\n\n    return fetch(searchStaysUrl, {\n        headers: {\n            Authorization: `Bearer ${authToken}`,\n        },\n    }).then((response) => {\n        if (response.status !== 200) {\n            throw Error(\"Fail to search stays\");\n        }\n\n        return response.json();\n    });\n};\n\nexport const deleteStay = (stayId) => {\n    const authToken = localStorage.getItem(\"authToken\");\n    const deleteStayUrl = `${domain}/stays/${stayId}`;\n\n    return fetch(deleteStayUrl, {\n        method: \"DELETE\",\n        headers: {\n            Authorization: `Bearer ${authToken}`,\n        },\n    }).then((response) => {\n        if (response.status !== 200) {\n            throw Error(\"Fail to delete stay\");\n        }\n    });\n};\n\nexport const bookStay = (data) => {\n    const authToken = localStorage.getItem(\"authToken\");\n    const bookStayUrl = `${domain}/reservations`;\n\n    return fetch(bookStayUrl, {\n        method: \"POST\",\n        headers: {\n            Authorization: `Bearer ${authToken}`,\n            \"Content-Type\": \"application/json\",\n        },\n        body: JSON.stringify(data),\n    }).then((response) => {\n        if (response.status !== 200) {\n            throw Error(\"Fail to book reservation\");\n        }\n    });\n};\n\nexport const cancelReservation = (reservationId) => {\n    const authToken = localStorage.getItem(\"authToken\");\n    const cancelReservationUrl = `${domain}/reservations/${reservationId}`;\n\n    return fetch(cancelReservationUrl, {\n        method: \"DELETE\",\n        headers: {\n            Authorization: `Bearer ${authToken}`,\n        },\n    }).then((response) => {\n        if (response.status !== 200) {\n            throw Error(\"Fail to cancel reservation\");\n        }\n    });\n};\n\nexport const getReservationsByStay = (stayId) => {\n    const authToken = localStorage.getItem(\"authToken\");\n    const getReservationByStayUrl = `${domain}/stays/reservations/${stayId}`;\n\n    return fetch(getReservationByStayUrl, {\n        headers: {\n            Authorization: `Bearer ${authToken}`,\n        },\n    }).then((response) => {\n        if (response.status !== 200) {\n            throw Error(\"Fail to get reservations by stay\");\n        }\n\n        return response.json();\n    });\n};\n\nexport const uploadStay = (data) => {\n    const authToken = localStorage.getItem(\"authToken\");\n    const uploadStayUrl = `${domain}/stays`;\n\n    return fetch(uploadStayUrl, {\n        method: \"POST\",\n        headers: {\n            Authorization: `Bearer ${authToken}`,\n        },\n        body: data,\n    }).then((response) => {\n        if (response.status !== 200) {\n            throw Error(\"Fail to upload stay\");\n        }\n    });\n};\n","import React from \"react\";\nimport { Form, Button, Input, Space, Checkbox, message } from \"antd\";\nimport { UserOutlined } from \"@ant-design/icons\";\nimport { login, register } from \"../utils\";\n\nclass LoginPage extends React.Component {\n    //初始化formRef\n    formRef = React.createRef();\n    state = {\n        asHost: false,\n        loading: false,\n    };\n\n    onFinish = () => {\n        console.log(\"finish form\");\n    };\n\n    handleLogin = async () => {\n        const formInstance = this.formRef.current;\n\n        try {\n            await formInstance.validateFields();\n        } catch (error) {\n            return;\n        }\n\n        this.setState({\n            loading: true,\n        });\n\n        try {\n            const { asHost } = this.state;\n            //formInstance.getFieldsValue(true)， 从当前instance取出值\n            const resp = await login(formInstance.getFieldsValue(true), asHost);\n            //登陆成功后，parent的component通过props做的事情\n            //记录token，确认一下authority是否是host\n            this.props.handleLoginSuccess(resp.token, asHost);\n        } catch (error) {\n            message.error(error.message);\n        } finally {\n            this.setState({\n                loading: false,\n            });\n        }\n    };\n\n    handleRegister = async () => {\n        const formInstance = this.formRef.current;\n        //在前端中检查\n        try {\n            await formInstance.validateFields();\n        } catch (error) {\n            return;\n        }\n        //前端的validation通过\n        this.setState({\n            loading: true,\n        });\n\n        try {\n            await register(formInstance.getFieldsValue(true), this.state.asHost);\n            message.success(\"Register Successfully\");\n        } catch (error) {\n            message.error(error.message);\n        } finally {\n            this.setState({\n                loading: false,\n            });\n        }\n    };\n\n    handleCheckboxOnChange = (e) => {\n        this.setState({\n            asHost: e.target.checked,\n        });\n    };\n\n//onfish事件会在form提交时触发\n// 绑定formRef\n    render() {\n        return (\n            <div style={{ width: 500, margin: \"20px auto\" }}>\n                <Form ref={this.formRef} onFinish={this.onFinish}>\n                    <Form.Item\n                        name=\"username\"\n                        rules={[\n                            {\n                                required: true,\n                                message: \"Please input your Username!\",\n                            },\n                        ]}\n                    >\n                        <Input\n                            disabled={this.state.loading}\n                            prefix={<UserOutlined className=\"site-form-item-icon\" />}\n                            placeholder=\"Username\"\n                        />\n                    </Form.Item>\n                    <Form.Item\n                        name=\"password\"\n                        rules={[\n                            {\n                                required: true,\n                                message: \"Please input your Password!\",\n                            },\n                        ]}\n                    >\n                        <Input.Password\n                            disabled={this.state.loading}\n                            placeholder=\"Password\"\n                        />\n                    </Form.Item>\n                </Form>\n                <Space>\n                    <Checkbox\n                        disabled={this.state.loading}\n                        checked={this.state.asHost}\n                        onChange={this.handleCheckboxOnChange}\n                    >\n                        As Host\n                    </Checkbox>\n                    <Button\n                        onClick={this.handleLogin}\n                        disabled={this.state.loading}\n                        shape=\"round\"\n                        type=\"primary\"\n                    >\n                        Log in\n                    </Button>\n                    <Button\n                        onClick={this.handleRegister}\n                        disabled={this.state.loading}\n                        shape=\"round\"\n                        type=\"primary\"\n                    >\n                        Register\n                    </Button>\n                </Space>\n            </div>\n        );\n    }\n}\n\nexport default LoginPage;\n","import React from \"react\";\nimport { Form, Input, InputNumber, Button, message } from \"antd\";\nimport { uploadStay } from \"../utils\";\n\nconst layout = {\n    labelCol: { span: 8 },\n    wrapperCol: { span: 16 },\n};\n\nclass UploadStay extends React.Component {\n    state = {\n        loading: false,\n    };\n\n    fileInputRef = React.createRef();\n\n    handleSubmit = async (values) => {\n        const formData = new FormData();\n        const { files } = this.fileInputRef.current;\n\n       //检查是否传的文件超过五个\n        if (files.length > 5) {\n            message.error(\"You can at most upload 5 pictures.\");\n            return;\n        }\n\n        //将酒店图片append到form data上\n        for (let i = 0; i < files.length; i++) {\n            formData.append(\"images\", files[i]);\n        }\n\n        //将上传文件的用户信息append到form data上\n        formData.append(\"name\", values.name);\n        formData.append(\"address\", values.address);\n        formData.append(\"description\", values.description);\n        formData.append(\"guest_number\", values.guest_number);\n\n        this.setState({\n            loading: true,\n        });\n        try {\n            await uploadStay(formData);\n            message.success(\"upload successfully\");\n        } catch (error) {\n            message.error(error.message);\n        } finally {\n            this.setState({\n                loading: false,\n            });\n        }\n    };\n\n    render() {\n        // {...layout} spread 语法，把layout这个object里的内容，\n        // 一对一对作为key value pair传入form\n        // <Form {...layout}></Form> 等价于 <Form lableCol = {} wrapper= {}> </From>\n\n        //name是property的名字，label是在ui上显示的字样\n        return (\n            <Form\n                {...layout}\n                name=\"nest-messages\"\n                onFinish={this.handleSubmit}\n                style={{ maxWidth: 1000, margin: \"auto\" }}\n            >\n                <Form.Item name=\"name\" label=\"Name\" rules={[{ required: true }]}>\n                    <Input />\n                </Form.Item>\n                <Form.Item name=\"address\" label=\"Address\" rules={[{ required: true }]}>\n                    <Input />\n                </Form.Item>\n                <Form.Item\n                    name=\"description\"\n                    label=\"Description\"\n                    rules={[{ required: true }]}\n                >\n                    <Input.TextArea autoSize={{ minRows: 2, maxRows: 6 }} />\n                </Form.Item>\n                <Form.Item\n                    name=\"guest_number\"\n                    label=\"Guest Number\"\n                    rules={[{ required: true, type: \"number\", min: 1 }]}\n                >\n                    <InputNumber />\n                </Form.Item>\n                {/*\n                  accept=\"image/png, image/jpeg\" 确定接受的文件格式\n                  */}\n                <Form.Item name=\"picture\" label=\"Picture\" rules={[{ required: true }]}>\n                    <input\n                        type=\"file\"\n                        accept=\"image/png, image/jpeg\"\n                        ref={this.fileInputRef}\n                        multiple={true}\n                    />\n                </Form.Item>\n                <Form.Item wrapperCol={{ ...layout.wrapperCol, offset: 8 }}>\n                    <Button type=\"primary\" htmlType=\"submit\" loading={this.state.loading}>\n                        Submit\n                    </Button>\n                </Form.Item>\n            </Form>\n        );\n    }\n}\n\nexport default UploadStay;\n","import React from \"react\";\nimport {\n    Tabs,\n    List,\n    Card,\n    message,\n    Typography,\n    Button,\n    Tooltip,\n    Modal,\n    Image,\n    Space,\n    Carousel,\n} from \"antd\";\nimport {\n    InfoCircleOutlined,\n    LeftCircleFilled,\n    RightCircleFilled,\n} from \"@ant-design/icons\";\nimport { deleteStay, getReservationsByStay, getStaysByHost } from \"../utils\";\nimport UploadStay from \"./UploadStay\";\n\nconst { Text } = Typography;\nconst { TabPane } = Tabs;\n\n\n\n//idea：将与主要功能不缠绕（互相有关系）的button重新分成一个component\nexport class StayDetailInfoButton extends React.Component {\n    state = {\n        modalVisible: false,\n    };\n\n    openModal = () => {\n        this.setState({\n            modalVisible: true,\n        });\n    };\n\n    //控制modal的状态\n    handleCancel = () => {\n        this.setState({\n            modalVisible: false,\n        });\n    };\n\n    render() {\n        const { stay } = this.props;\n        const { name, description, address, guest_number } = stay;\n        const { modalVisible } = this.state;\n        //name of 弹窗: modal\n        return (\n            <>\n                <Tooltip title=\"View Stay Details\">\n                    <Button\n                        onClick={this.openModal}\n                        style={{ border: \"none\" }}\n                        size=\"large\"\n                        icon={<InfoCircleOutlined />}\n                    />\n                </Tooltip>\n                {modalVisible && (\n                    <Modal\n                        title={name}\n                        centered={true}\n                        visible={modalVisible}\n                        closable={false}\n                        footer={null}\n                        onCancel={this.handleCancel}\n                    >\n                        <Space direction=\"vertical\">\n                            <Text strong={true}>Description</Text>\n                            <Text type=\"secondary\">{description}</Text>\n                            <Text strong={true}>Address</Text>\n                            <Text type=\"secondary\">{address}</Text>\n                            <Text strong={true}>Guest Number</Text>\n                            <Text type=\"secondary\">{guest_number}</Text>\n                        </Space>\n                    </Modal>\n                )}\n            </>\n        );\n    }\n}\n\nclass RemoveStayButton extends React.Component {\n    state = {\n        loading: false,\n    };\n\n    handleRemoveStay = async () => {\n        const { stay, onRemoveSuccess } = this.props;\n        this.setState({\n            loading: true,\n        });\n\n        try {\n            await deleteStay(stay.id);\n            //删除后重新加载页面\n            onRemoveSuccess();\n        } catch (error) {\n            message.error(error.message);\n        } finally {\n            this.setState({\n                loading: false,\n            });\n        }\n    };\n\n\n    render() {\n        return (\n            <Button\n                loading={this.state.loading}\n                onClick={this.handleRemoveStay}\n                danger={true}\n                shape=\"round\"\n                type=\"primary\"\n            >\n                Remove Stay\n            </Button>\n        );\n    }\n}\n\nclass ReservationList extends React.Component {\n    state = {\n        loading: false,\n        reservations: [],\n    };\n\n    componentDidMount() {\n        this.loadData();\n    }\n\n    loadData = async () => {\n        this.setState({\n            loading: true,\n        });\n\n        try {\n            const resp = await getReservationsByStay(this.props.stayId);\n            this.setState({\n                reservations: resp,\n            });\n        } catch (error) {\n            message.error(error.message);\n        } finally {\n            this.setState({\n                loading: false,\n            });\n        }\n    };\n\n    render() {\n        const { loading, reservations } = this.state;\n\n        return (\n            <List\n                loading={loading}\n                dataSource={reservations}\n                renderItem={(item) => (\n                    <List.Item>\n                        <List.Item.Meta\n                            title={<Text>Guest Name: {item.guest.username}</Text>}\n                            description={\n                                <>\n                                    <Text>Checkin Date: {item.checkin_date}</Text>\n                                    <br />\n                                    <Text>Checkout Date: {item.checkout_date}</Text>\n                                </>\n                            }\n                        />\n                    </List.Item>\n                )}\n            />\n        );\n    }\n}\n\nclass ViewReservationsButton extends React.Component {\n    state = {\n        modalVisible: false,\n    };\n\n    openModal = () => {\n        this.setState({\n            modalVisible: true,\n        });\n    };\n\n    handleCancel = () => {\n        this.setState({\n            modalVisible: false,\n        });\n    };\n\n    render() {\n        const { stay } = this.props;\n        const { modalVisible } = this.state;\n\n        // string template\n        const modalTitle = `Reservations of ${stay.name}`;\n\n        return (\n            <>\n                <Button onClick={this.openModal} shape=\"round\">\n                    View Reservations\n                </Button>\n                {modalVisible && (\n                    <Modal\n                        title={modalTitle}\n                        centered={true}\n                        visible={modalVisible}\n                        closable={false}\n                        footer={null}\n                        onCancel={this.handleCancel}\n                        destroyOnClose={true}\n                    >\n                        <ReservationList stayId={stay.id} />\n                    </Modal>\n                )}\n            </>\n        );\n    }\n}\n\nclass MyStays extends React.Component {\n    state = {\n        loading: false,\n        data: [],\n    };\n\n    componentDidMount() {\n        this.loadData();\n    }\n\n    //控制ui的 loading indication的显示\n    loadData = async () => {\n        const{ stay } = this.props;\n        this.setState({\n            loading: true,\n        });\n\n        try {\n            const resp = await getStaysByHost();\n            this.setState({\n                data: resp,\n            });\n        } catch (error) {\n            message.error(error.message);\n        } finally {\n            this.setState({\n                loading: false,\n            });\n        }\n    };\n\n    // grid = {{}}是一种props\n    // 凡是props不是string的，需要插入第一层{}表示不需要翻译， 而第二层{}则是js object\n    render() {\n        return (\n            <List\n                loading={this.state.loading}\n                grid={{\n                    gutter: 16,\n                    xs: 1,\n                    sm: 3,\n                    md: 3,\n                    lg: 3,\n                    xl: 4,\n                    xxl: 4,\n                }}\n                dataSource={this.state.data}\n                renderItem={(item) => (\n                    <List.Item>\n                        <Card\n                            key={item.id}\n                            title={\n                                <div style={{ display: \"flex\", alignItems: \"center\" }}>\n                                    <Text ellipsis={true} style={{ maxWidth: 150 }}>\n                                        {item.name}\n                                    </Text>\n                                    <StayDetailInfoButton stay={item} />\n                                </div>\n                            }\n                            actions={[<ViewReservationsButton stay={item}/>]}\n                            extra={<RemoveStayButton stay={item}\n                                                     onRemoveSuccess={this.loadData} />}\n                        >\n                            {\n                                <Carousel\n                                    dots={false}\n                                    arrows={true}\n                                    prevArrow={<LeftCircleFilled />}\n                                    nextArrow={<RightCircleFilled />}\n                                >\n                                    {item.images.map((image, index) => (\n                                        <div key={index}>\n                                            <Image src={image.url} width=\"100%\" />\n                                        </div>\n                                    ))}\n                                </Carousel>\n                            }\n                        </Card>\n                    </List.Item>\n                )}\n            />\n        );\n    }\n}\n\nclass HostHomePage extends React.Component {\n    //destroyInactiveTabPane: delete inactive TabPlane on the DOM tree\n\n    render() {\n        return (\n            <Tabs defaultActiveKey=\"1\" destroyInactiveTabPane={true}>\n                <TabPane tab=\"My Stays\" key=\"1\">\n                    <MyStays />\n                </TabPane>\n                <TabPane tab=\"Upload Stay\" key=\"2\">\n                    <UploadStay />\n                </TabPane>\n            </Tabs>\n        );\n    }\n}\n\nexport default HostHomePage;","import React from \"react\";\nimport { Tabs, message, List, Typography, Button, Form,\n    DatePicker, InputNumber, Card, Carousel,\n    Image, Modal,} from \"antd\";\nimport {bookStay, cancelReservation,\n    getReservations, searchStays,} from \"../utils\";\nimport { StayDetailInfoButton } from \"../components/HostHomePage\";\nimport { LeftCircleFilled, RightCircleFilled } from \"@ant-design/icons\";\n\nconst { Text } = Typography;\nconst { TabPane } = Tabs;\n\nclass BookStayButton extends React.Component {\n    state = {\n        loading: false,\n        modalVisible: false,\n    };\n\n    handleCancel = () => {\n        this.setState({\n            modalVisible: false,\n        });\n    };\n\n    handleBookStay = () => {\n        this.setState({\n            modalVisible: true,\n        });\n    };\n\n    handleSubmit = async (values) => {\n        const { stay } = this.props;\n        this.setState({\n            loading: true,\n        });\n\n        try {\n            await bookStay({\n                checkin_date: values.checkin_date.format(\"YYYY-MM-DD\"),\n                checkout_date: values.checkout_date.format(\"YYYY-MM-DD\"),\n                stay: {\n                    id: stay.id,\n                },\n            });\n            message.success(\"Successfully book stay\");\n        } catch (error) {\n            message.error(error.message);\n        } finally {\n            this.setState({\n                loading: false,\n            });\n        }\n    };\n\n    render() {\n        const { stay } = this.props;\n        return (\n            <>\n                <Button onClick={this.handleBookStay} shape=\"round\" type=\"primary\">\n                    Book Stay\n                </Button>\n                <Modal\n                    destroyOnClose={true}\n                    title={stay.name}\n                    visible={this.state.modalVisible}\n                    footer={null}\n                    onCancel={this.handleCancel}\n                >\n                    <Form\n                        preserve={false}\n                        labelCol={{ span: 8 }}\n                        wrapperCol={{ span: 16 }}\n                        onFinish={this.handleSubmit}\n                    >\n                        <Form.Item\n                            label=\"Checkin Date\"\n                            name=\"checkin_date\"\n                            rules={[{ required: true }]}\n                        >\n                            <DatePicker />\n                        </Form.Item>\n                        <Form.Item\n                            label=\"Checkout Date\"\n                            name=\"checkout_date\"\n                            rules={[{ required: true }]}\n                        >\n                            <DatePicker />\n                        </Form.Item>\n                        <Form.Item wrapperCol={{ offset: 8, span: 16 }}>\n                            <Button\n                                loading={this.state.loading}\n                                type=\"primary\"\n                                htmlType=\"submit\"\n                            >\n                                Book\n                            </Button>\n                        </Form.Item>\n                    </Form>\n                </Modal>\n            </>\n        );\n    }\n}\n\nclass SearchStays extends React.Component {\n    state = {\n        data: [],\n        loading: false,\n    };\n\n    search = async (query) => {\n        this.setState({\n            loading: true,\n        });\n\n        try {\n            const resp = await searchStays(query);\n            this.setState({\n                data: resp,\n            });\n        } catch (error) {\n            message.error(error.message);\n        } finally {\n            this.setState({\n                loading: false,\n            });\n        }\n    };\n\n    render() {\n        return (\n            <>\n                <Form onFinish={this.search} layout=\"inline\">\n                    <Form.Item\n                        label=\"Guest Number\"\n                        name=\"guest_number\"\n                        rules={[{ required: true }]}\n                    >\n                        <InputNumber min={1} />\n                    </Form.Item>\n\n                    <Form.Item\n                        label=\"Checkin Date\"\n                        name=\"checkin_date\"\n                        rules={[{ required: true }]}\n                    >\n                        <DatePicker />\n                    </Form.Item>\n\n                    <Form.Item\n                        label=\"Checkout Date\"\n                        name=\"checkout_date\"\n                        rules={[{ required: true }]}\n                    >\n                        <DatePicker />\n                    </Form.Item>\n\n\n                    <Form.Item>\n                        <Button\n                            loading={this.state.loading}\n                            type=\"primary\"\n                            htmlType=\"submit\"\n                        >\n                            Submit\n                        </Button>\n                    </Form.Item>\n\n                </Form>\n\n                {/*展示根据日期的搜索结果*/}\n                <List\n                    style={{ marginTop: 20 }}\n                    loading={this.state.loading}\n                    grid={{\n                        gutter: 16,\n                        xs: 1,\n                        sm: 3,\n                        md: 3,\n                        lg: 3,\n                        xl: 4,\n                        xxl: 4,\n                    }}\n                    dataSource={this.state.data}\n                    renderItem={(item) => (\n                        <List.Item>\n                            <Card\n                                key={item.id}\n                                title={\n                                    <div style={{ display: \"flex\", alignItems: \"center\" }}>\n                                        <Text ellipsis={true} style={{ maxWidth: 150 }}>\n                                            {item.name}\n                                        </Text>\n                                        <StayDetailInfoButton stay={item} />\n                                    </div>\n                                }\n                                extra={<BookStayButton stay={item} />}\n                            >\n                                {\n                                    <Carousel\n                                        dots={false}\n                                        arrows={true}\n                                        prevArrow={<LeftCircleFilled />}\n                                        nextArrow={<RightCircleFilled />}\n                                    >\n                                        {item.images.map((image, index) => (\n                                            <div key={index}>\n                                                <Image src={image.url} width=\"100%\" />\n                                            </div>\n                                        ))}\n                                    </Carousel>\n                                }\n                            </Card>\n                        </List.Item>\n                    )}\n                />\n            </>\n        );\n    }\n}\n\nclass CancelReservationButton extends React.Component {\n    state = {\n        loading: false,\n    };\n\n    handleCancelReservation = async () => {\n        const { reservationId, onCancelSuccess } = this.props;\n        this.setState({\n            loading: true,\n        });\n\n        try {\n            await cancelReservation(reservationId);\n            onCancelSuccess();\n        } catch (error) {\n            message.error(error.message);\n        } finally {\n            this.setState({\n                loading: false,\n            });\n        }\n\n    };\n\n    render() {\n        return (\n            <Button\n                loading={this.state.loading}\n                onClick={this.handleCancelReservation}\n                danger={true}\n                shape=\"round\"\n                type=\"primary\"\n            >\n                Cancel Reservation\n            </Button>\n        );\n    }\n}\n\nclass MyReservations extends React.Component {\n    state = {\n        loading: false,\n        data: [],\n    };\n\n    componentDidMount() {\n        this.loadData();\n    }\n\n    loadData = async () => {\n        this.setState({\n            loading: true,\n        });\n\n        try {\n            const resp = await getReservations();\n            this.setState({\n                data: resp,\n            });\n        } catch (error) {\n            message.error(error.message);\n        } finally {\n            this.setState({\n                loading: false,\n            });\n        }\n    };\n\n    render() {\n        return (\n            <List\n                style={{ width: 1000, margin: \"auto\" }}\n                loading={this.state.loading}\n                dataSource={this.state.data}\n                renderItem={(item) => (\n                    <List.Item\n                        actions={[\n                            <CancelReservationButton\n                                reservationId={item.id}\n                                onCancelSuccess={() => this.loadData()}\n                            />,\n                        ]}\n                    >\n                        <List.Item.Meta\n                            title={<Text>{item.stay.name}</Text>}\n                            description={\n                                <>\n                                    <Text>Checkin Date: {item.checkin_date}</Text>\n                                    <br />\n                                    <Text>Checkout Date: {item.checkout_date}</Text>\n                                </>\n                            }\n                        />\n                    </List.Item>\n                )}\n            />\n        );\n    }\n}\n\nclass GuestHomePage extends React.Component {\n    render() {\n        return (\n            <Tabs defaultActiveKey=\"1\" destroyInactiveTabPane={true}>\n                <TabPane tab=\"Search Stays\" key=\"1\">\n                    <SearchStays />\n                </TabPane>\n                <TabPane tab=\"My Reservations\" key=\"2\">\n                    <MyReservations />\n                </TabPane>\n                ane 3\n            </Tabs>\n        );\n    }\n}\n\nexport default GuestHomePage;","import { Layout, Dropdown, Menu, Button } from \"antd\";\nimport { UserOutlined } from \"@ant-design/icons\";\nimport React from \"react\";\nimport LoginPage from \"./components/LoginPage\";\nimport HostHomePage from \"./components/HostHomePage\";\nimport GuestHomePage from \"./components/GuestHomePage\";\n\nconst { Header, Content } = Layout;\n//deconstruction，等效于 const Header = Layout.Haader\n\nclass App extends React.Component {\n  state = {\n    authed: false,\n    asHost: false,\n  };\n\n  //coponentDidMount：app component的render函数执行完之后（一来到主页时），所做的事情\n  componentDidMount() {\n    //log-in persistance\n    // localStorage: 格式-map，可以persist数据\n    const authToken = localStorage.getItem(\"authToken\");\n    const asHost = localStorage.getItem(\"asHost\") === \"true\";\n    this.setState({\n      authed: authToken !== null,\n      asHost,\n    });\n  }\n\n  handleLoginSuccess = (token, asHost) => {\n    localStorage.setItem(\"authToken\", token);\n    localStorage.setItem(\"asHost\", asHost);\n    this.setState({\n      authed: true,\n      asHost,\n    });\n  };\n\n  handleLogOut = () => {\n    localStorage.removeItem(\"authToken\");\n    localStorage.removeItem(\"asHost\");\n    this.setState({\n      authed: false,\n    });\n  };\n\n  //在外层定义content， 用于处理当content的逻辑复杂时，专门针对content的render函数\n  renderContent = () => {\n\n    if (!this.state.authed) {\n      return <LoginPage handleLoginSuccess={this.handleLoginSuccess} />;\n    }\n\n    if (this.state.asHost) {\n      return <HostHomePage />;\n    }\n\n    return <GuestHomePage />;\n  };\n\n  userMenu = (\n      <Menu>\n        <Menu.Item key=\"logout\" onClick={this.handleLogOut}>\n          Log Out\n        </Menu.Item>\n      </Menu>\n  );\n\n  render() {\n    return (\n        <Layout style={{ height: \"100vh\" }}>\n          <Header style={{ display: \"flex\", justifyContent: \"space-between\" }}>\n            <div style={{ fontSize: 24, fontWeight: 600, color: \"white\" }}>\n              DEMO: STAY RENTAL APPLICATION\n            </div>\n            {this.state.authed && (\n                <div>\n                  <Dropdown trigger=\"click\" overlay={this.userMenu}>\n                    <Button icon={<UserOutlined />} shape=\"circle\" />\n                  </Dropdown>\n                </div>\n            )}\n          </Header>\n\n          <Content\n              style={{ height: \"calc(100% - 64px)\", margin: 20, overflow: \"auto\" }}\n          >\n            {this.renderContent()}\n          </Content>\n        </Layout>\n    );\n  }\n}\n\nexport default App;\n\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}